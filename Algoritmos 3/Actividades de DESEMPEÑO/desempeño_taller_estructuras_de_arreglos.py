# -*- coding: utf-8 -*-
"""desempeño taller estructuras de arreglos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12VowXbkhRtnrTG4xqxYLGwX7q-y5Qzgm

Taller desempeño estructuras de arreglos
"""

"""1. Crear una lista con n números, ingresados por teclado y mostrar sus valores elevados al cuadrado."""

# El problema nos pide crear una lista de números,
# luego elevar cada número al cuadrado
# y mostrar los resultados.

# 2 Necesitaremos una variable para almacenar la cantidad de números
# (n) y un vector (lista) para almacenar los números ingresados.


# cantidad de n
n = int(input("Ingrese la cantidad de números: "))

# Crear un vector
lista = []

# ingresar los números
for i in range(n):
    num = float(input(f"Ingrese el número {i+1}: "))
    lista.append(num)

# Elevar al cuadrado
print("Los números elevados al cuadrado son:")
for num in lista:
    cuadrado = num ** 2
    print(cuadrado)

"""2. Crear una lista donde se ingresen la cantidad y precios de los productos para preparar un plato, y luego mostrar el costo total al final. """

 # cantidad de productos
 # precios de los productos
 # Inicializamos el costo total en 0
 # costo total

cantidad_productos = int(input("Ingrese la cantidad de productos: "))
costo_total = 0
for i in range(cantidad_productos):
    precio = float(input(f"Ingrese el precio del producto {i+1}: "))
    costo_total += precio
print(f"El costo total a gastar es: {costo_total}")

""" 3. Buscar un elemento dentro de una lista el usuario ingresa por teclado y luego indicar su posición """

# Pedir al usuario que ingrese los elementos de la lista.
# Pedir al usuario que ingrese el elemento que desea buscar.
# Utilizar un bucle para recorrer la lista y buscar el elemento.
# Si se encuentra el elemento, mostrar su posición en la lista.

elementos = input("Ingrese los elementos separados por espacios: ").split()
elemento_buscar = input("Ingrese el elemento que desea buscar: ")
posiciones = []
for i in range(len(elementos)):
    if elementos[i] == elemento_buscar:
        posiciones.append(i)
if posiciones:
    print(f"El elemento {elemento_buscar} se encuentra en la(s) posición(es): {', '.join(map(str, posiciones))}")
else:
    print(f"El elemento {elemento_buscar} no se encuentra en la lista.")