# -*- coding: utf-8 -*-
"""Taller organización de colecciones de datos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1C3SYZpUZzleAO819Y9zhZvzp2DzDu2Q3
"""



"""Taller conocimiento, organización de colecciones de datos"""

"""1."""
# Creamos una lista vacía para guardar los datos de los alumnos
# Bucle para introducir los datos de los alumnos
# Mostramos los estudiantes mayores de edad
# Mostramos los alumnos mayores (los que tienen más edad)

alumnos = []
while True:
    nombre = input("Introduce el nombre del alumno (o * pa terminar): ")
    if nombre == "*":
        break
    edad = int(input("Introduce la edad del alumno: "))
    alumnos.append({"nombre": nombre, "edad": edad})
mayores_de_edad = [alumno for alumno in alumnos if alumno["edad"] >= 18]
print("Estudiantes mayores de edad:")
for alumno in mayores_de_edad:
    print(alumno["nombre"])
alumno_mas_viejo = max(alumnos, key=lambda x: x["edad"])
print(f"Alumno más viejo: {alumno_mas_viejo['nombre']} con {alumno_mas_viejo['edad']} años")

"""2."""
# Creamos una lista vacía para guardar los números aleatorios
# Generamos 10 números aleatorios entre 1 y 100 y los agregamos a la lista
# Ordenamos la lista de menor a mayor
# Mostramos la lista ordenada

import random
numeros = []
for i in range(10):
    numero = random.randint(1, 100)
    numeros.append(numero)
numeros.sort()
print("Lista ordenada de menor a mayor:")
print(numeros)

"""3."""
# Creamos una lista con los nombres de los meses y el número de días que tienen
# Pedimos al usuario que introduzca un número de mes
# Comprobamos que el número de mes es válido, buscamos el mes en la lista `meses`
# Mostramos el nombre del mes y el número de días que tiene

meses = [
    {"nombre": "enero", "dias": 31},
    {"nombre": "febrero", "dias": 28},
    {"nombre": "marzo", "dias": 31},
    {"nombre": "abril", "dias": 30},
    {"nombre": "mayo", "dias": 31},
    {"nombre": "junio", "dias": 30},
    {"nombre": "julio", "dias": 31},
    {"nombre": "agosto", "dias": 31},
    {"nombre": "septiembre", "dias": 30},
    {"nombre": "octubre", "dias": 31},
    {"nombre": "noviembre", "dias": 30},
    {"nombre": "diciembre", "dias": 31},
]
numero_mes = int(input("Introduce el número de un mes (1-12): "))
if 1 <= numero_mes <= 12:
    mes = meses[numero_mes - 1]
    print(f"{mes['nombre']} y tiene {mes['dias']} días.")
else:
    print("El número de mes no es válido.")

"""4"""
#Crear una lista vacía para almacenar las edades
#Recopilar edades del usuario
#Ordenar las edades de menor a mayor
#Imprimir las edades ordenadas

ages = []
while True:
    age = input("Introduce an age (or '*' to stop): ")
    if age == '*':
        break
    ages.append(int(age))
ages.sort()
print("The sorted ages are:")
for age in ages:
    print(age)

"""5."""
conjunto_1 = {1, 2, 3, 4, 5}
conjunto_2 = {2, 4, 6, 8, 10}

resultado = conjunto_1 - conjunto_2

print(resultado)

"""6"""
conjunto_1 = {1, 2, 3, 4, 5}
conjunto_2 = {2, 4, 6, 8, 10}

resultado = conjunto_1 | conjunto_2

print(resultado)

"""7."""
mi_tupla = (4, 2, 9, 7, 5, 1)

maximo = max(mi_tupla)
minimo = min(mi_tupla)

print("El máximo es:", maximo)
print("El mínimo es:", minimo)

"""8"""
# Creamos una lista vacía para almacenar las tuplas de alumnos
# Pedimos al usuario que ingrese la información de los alumnos
# Buscamos el alumno con el promedio más alto

alumnos = []
while True:
    nombre = input("Ingrese el nombre del alumno (o '*' para terminar): ")
    if nombre == '*':
        break
    edad = int(input("Ingrese la edad del alumno: "))
    promedio = float(input("Ingrese el promedio de calificaciones del alumno: "))
    alumnos.append((nombre, edad, promedio))
max_promedio = max(alumnos, key=lambda x: x[2])
print("El alumno con el promedio más alto es:", max_promedio[0], "con un promedio de", max_promedio[2])

"""9"""
# Función para agregar un nuevo contacto,
# función para buscar un contacto por nombre
# Función para listar todos los contactos
# Crear una libreta vacía
# Agregar algunos contactos
# Buscar un contacto
# Listar todos los contactos

def agregar_contacto(libreta):
    nombre = input("Ingrese el nombre del contacto: ")
    telefono = input("Ingrese el número de teléfono del contacto: ")
    libreta.append((nombre, telefono))
def buscar_contacto(libreta):
    nombre = input("Ingrese el nombre del contacto a buscar: ")
    for contacto in libreta:
        if contacto[0] == nombre:
            print("Nombre:", contacto[0])
            print("Teléfono:", contacto[1])
            return
    print("No se encontró ningún contacto con ese nombre.")
def listar_contactos(libreta):
    for contacto in libreta:
        print("Nombre:", contacto[0])
        print("Teléfono:", contacto[1])
libreta = []
agregar_contacto(libreta)
agregar_contacto(libreta)
buscar_contacto(libreta)
print("Todos los contactos:")
listar_contactos(libreta)